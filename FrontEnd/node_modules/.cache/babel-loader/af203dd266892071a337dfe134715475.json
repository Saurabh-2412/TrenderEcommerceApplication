{"ast":null,"code":"export const cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"Added\":\n      if (state.cartList.some(item => item.id === action.payload.id)) {\n        const increasedQuantity = state.cartList.map(item => {\n          console.log(item.id);\n          return item.id === action.payload.id ? { ...item,\n            quantity: item.quantity + 1\n          } : item;\n        });\n        return { ...state,\n          cartList: increasedQuantity,\n          cardColor: \"orange\"\n        };\n      } else {\n        return { ...state,\n          cartList: [...state.cartList, action.payload],\n          cardColor: \"orange\"\n        };\n      }\n\n    case \"Increment\":\n      const increasedQuantity = state.cartList.map(item => {\n        console.log(item.id);\n        return item.id === action.payload.id ? { ...item,\n          quantity: item.quantity + 1\n        } : item;\n      });\n      return { ...state,\n        cartList: increasedQuantity,\n        cardColor: \"orange\"\n      };\n\n    case \"Decrement\":\n      if (action.payload.quantity > 1) {\n        const decreasedQuantity = state.cartList.map(item => {\n          console.log(item.id);\n          return item.id === action.payload.id ? { ...item,\n            quantity: item.quantity - 1\n          } : item;\n        });\n        return { ...state,\n          cartList: decreasedQuantity,\n          cardColor: \"orange\"\n        };\n      } else {\n        const filteredCartList = state.cartList.filter(product => product.id !== action.payload.id);\n        return { ...state,\n          cartList: filteredCartList,\n          cardColor: \"white\"\n        };\n      }\n\n    case \"Remove\":\n      const newCartList = state.cartList.filter(product => product.id !== action.payload.id);\n      return { ...state,\n        cartList: newCartList,\n        cardColor: \"white\"\n      };\n\n    case \"MoveToCart\":\n      if (state.cartList.some(item => item.id === action.payload.id)) {\n        const MovedItem = state.cartList.map(item => {\n          return item.id === action.payload.id ? { ...item,\n            quantity: item.quantity + 1\n          } : item;\n        });\n        return { ...state,\n          cartList: MovedItem,\n          cardColor: \"orange\"\n        };\n      } else {\n        return { ...state,\n          cartList: [...state.cartList, action.payload],\n          cardColor: \"orange\"\n        };\n      }\n\n    default:\n  }\n};","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/E-Commerce/E-Commerce-App/src/Reducer/CartReducer.js"],"names":["cartReducer","state","action","type","cartList","some","item","id","payload","increasedQuantity","map","console","log","quantity","cardColor","decreasedQuantity","filteredCartList","filter","product","newCartList","MovedItem"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,UAAIF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAqBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAAzD,CAAJ,EAAkE;AAChE,cAAME,iBAAiB,GAAGR,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBJ,IAAD,IAAU;AACrDK,UAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,EAAjB;AACA,iBAAOD,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAA3B,GACH,EAAE,GAAGD,IAAL;AAAWO,YAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAL,GAAgB;AAArC,WADG,GAEHP,IAFJ;AAGD,SALyB,CAA1B;AAMA,eAAO,EACL,GAAGL,KADE;AAELG,UAAAA,QAAQ,EAAEK,iBAFL;AAGLK,UAAAA,SAAS,EAAC;AAHL,SAAP;AAKD,OAZD,MAYO;AACL,eAAO,EACL,GAAGb,KADE;AAELG,UAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACM,OAA3B,CAFL;AAGLM,UAAAA,SAAS,EAAC;AAHL,SAAP;AAKD;;AAEH,SAAK,WAAL;AACE,YAAML,iBAAiB,GAAGR,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBJ,IAAD,IAAU;AACrDK,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,EAAjB;AACA,eAAOD,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAA3B,GACH,EAAE,GAAGD,IAAL;AAAWO,UAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAL,GAAgB;AAArC,SADG,GAEHP,IAFJ;AAGD,OALyB,CAA1B;AAMA,aAAO,EACL,GAAGL,KADE;AAELG,QAAAA,QAAQ,EAAEK,iBAFL;AAGLK,QAAAA,SAAS,EAAC;AAHL,OAAP;;AAMF,SAAK,WAAL;AACE,UAAIZ,MAAM,CAACM,OAAP,CAAeK,QAAf,GAA0B,CAA9B,EAAiC;AAC/B,cAAME,iBAAiB,GAAGd,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBJ,IAAD,IAAU;AACrDK,UAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,EAAjB;AACA,iBAAOD,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAA3B,GACH,EAAE,GAAGD,IAAL;AAAWO,YAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAL,GAAgB;AAArC,WADG,GAEHP,IAFJ;AAGD,SALyB,CAA1B;AAMA,eAAO,EACL,GAAGL,KADE;AAELG,UAAAA,QAAQ,EAAEW,iBAFL;AAGLD,UAAAA,SAAS,EAAC;AAHL,SAAP;AAKD,OAZD,MAYO;AACL,cAAME,gBAAgB,GAAGf,KAAK,CAACG,QAAN,CAAea,MAAf,CACtBC,OAAD,IAAaA,OAAO,CAACX,EAAR,KAAeL,MAAM,CAACM,OAAP,CAAeD,EADpB,CAAzB;AAGA,eAAO,EACL,GAAGN,KADE;AAELG,UAAAA,QAAQ,EAAEY,gBAFL;AAGLF,UAAAA,SAAS,EAAC;AAHL,SAAP;AAKD;;AAEH,SAAK,QAAL;AACE,YAAMK,WAAW,GAAGlB,KAAK,CAACG,QAAN,CAAea,MAAf,CACjBC,OAAD,IAAaA,OAAO,CAACX,EAAR,KAAeL,MAAM,CAACM,OAAP,CAAeD,EADzB,CAApB;AAGA,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,QAAQ,EAAEe,WAFL;AAGLL,QAAAA,SAAS,EAAC;AAHL,OAAP;;AAMF,SAAK,YAAL;AACE,UAAIb,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAqBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAAzD,CAAJ,EAAkE;AAChE,cAAMa,SAAS,GAAGnB,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBJ,IAAD,IAAU;AAC7C,iBAAOA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeD,EAA3B,GACH,EAAE,GAAGD,IAAL;AAAWO,YAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAL,GAAgB;AAArC,WADG,GAEHP,IAFJ;AAGD,SAJiB,CAAlB;AAKA,eAAO,EACL,GAAGL,KADE;AAELG,UAAAA,QAAQ,EAAEgB,SAFL;AAGLN,UAAAA,SAAS,EAAC;AAHL,SAAP;AAKD,OAXD,MAWO;AACL,eAAO,EACL,GAAGb,KADE;AAELG,UAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACM,OAA3B,CAFL;AAGLM,UAAAA,SAAS,EAAC;AAHL,SAAP;AAKD;;AACH;AAxFF;AA0FD,CA3FI","sourcesContent":["export const cartReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"Added\":\r\n        if (state.cartList.some((item) => item.id === action.payload.id)) {\r\n          const increasedQuantity = state.cartList.map((item) => {\r\n            console.log(item.id);\r\n            return item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item;\r\n          });\r\n          return {\r\n            ...state,\r\n            cartList: increasedQuantity,\r\n            cardColor:\"orange\"\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            cartList: [...state.cartList, action.payload],\r\n            cardColor:\"orange\"\r\n          };\r\n        }\r\n  \r\n      case \"Increment\":\r\n        const increasedQuantity = state.cartList.map((item) => {\r\n          console.log(item.id);\r\n          return item.id === action.payload.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item;\r\n        });\r\n        return {\r\n          ...state,\r\n          cartList: increasedQuantity,\r\n          cardColor:\"orange\"\r\n        };\r\n  \r\n      case \"Decrement\":\r\n        if (action.payload.quantity > 1) {\r\n          const decreasedQuantity = state.cartList.map((item) => {\r\n            console.log(item.id);\r\n            return item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity - 1 }\r\n              : item;\r\n          });\r\n          return {\r\n            ...state,\r\n            cartList: decreasedQuantity,\r\n            cardColor:\"orange\"\r\n          };\r\n        } else {\r\n          const filteredCartList = state.cartList.filter(\r\n            (product) => product.id !== action.payload.id\r\n          );\r\n          return {\r\n            ...state,\r\n            cartList: filteredCartList,\r\n            cardColor:\"white\"\r\n          };\r\n        }\r\n  \r\n      case \"Remove\":\r\n        const newCartList = state.cartList.filter(\r\n          (product) => product.id !== action.payload.id\r\n        );\r\n        return {\r\n          ...state,\r\n          cartList: newCartList,\r\n          cardColor:\"white\"\r\n        };\r\n  \r\n      case \"MoveToCart\":\r\n        if (state.cartList.some((item) => item.id === action.payload.id)) {\r\n          const MovedItem = state.cartList.map((item) => {\r\n            return item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item;\r\n          });\r\n          return {\r\n            ...state,\r\n            cartList: MovedItem,\r\n            cardColor:\"orange\"\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            cartList: [...state.cartList, action.payload],\r\n            cardColor:\"orange\"\r\n          };\r\n        }\r\n      default:\r\n    }\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}