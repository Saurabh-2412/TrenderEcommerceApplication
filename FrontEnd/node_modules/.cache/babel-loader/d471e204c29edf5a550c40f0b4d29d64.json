{"ast":null,"code":"export const cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"Loading\":\n      return { ...state,\n        cartList: action.payload //displayCartModal: true,\n        //cartModalContent: \"Loading cart items\"\n\n      };\n\n    case \"Added\":\n      if (state.cartList.some(item => item.id === action.payload.id)) {\n        const increasedQuantity = state.cartList.map(item => {\n          //console.log(item.id);\n          return item.id === action.payload.id ? { ...item,\n            quantity: item.quantity + 1\n          } : item;\n        });\n        return { ...state,\n          cartList: increasedQuantity,\n          displayCartModal: true,\n          cartModalContent: \"Already exist in cart\"\n        };\n      } else {\n        return { ...state,\n          cartList: action.payload,\n          displayCartModal: true,\n          cartModalContent: \"Added to cart\"\n        };\n      }\n\n    case \"AlreadyExist\":\n      return { ...state,\n        displayCartModal: true,\n        cartModalContent: \"Item Already exist in cart\"\n      };\n\n    case \"Increment\":\n      const increasedQuantity = state.cartList.map(item => {\n        return item.id === action.payload.id ? { ...item,\n          quantity: item.quantity + 1\n        } : item;\n      });\n      return { ...state,\n        //cartList: increasedQuantity,\n        cartList: action.payload,\n        displayCartModal: true,\n        cartModalContent: \"Quantity Increased\"\n      };\n\n    case \"Decrement\":\n      if (action.payload.quantity > 1) {\n        const decreasedQuantity = state.cartList.map(item => {\n          //console.log(item.id);\n          return item.id === action.payload.id ? { ...item,\n            quantity: item.quantity - 1\n          } : item;\n        });\n        return { ...state,\n          //cartList: decreasedQuantity,\n          cartList: action.payload,\n          displayCartModal: true,\n          cartModalContent: \"Quantity Decreased\"\n        };\n      } else {\n        const filteredCartList = state.cartList.filter(product => product.id !== action.payload.id);\n        return { ...state,\n          cartList: filteredCartList,\n          displayCartModal: true,\n          cartModalContent: \"Removed from cart\"\n        };\n      }\n\n    case \"Remove\":\n      //console.log(\"from remove\", action.payload);\n      // const newCartList = state.cartList.filter(\n      //   (product) => product.id !== action.payload.id\n      // );\n      //console.log(\"from remove reducer\",newCartList)\n      return { ...state,\n        cartList: action.payload,\n        //newCartList\n        displayCartModal: true,\n        cartModalContent: \"Removed from cart\"\n      };\n\n    case \"DISPLAY_MODAL\":\n      //console.log(\"display modal from cart reducer\")\n      return { ...state,\n        displayCartModal: false\n      };\n\n    case \"MoveToCart\":\n      if (state.cartList.some(item => item.id === action.payload.id)) {\n        const MovedItem = state.cartList.map(item => {\n          return item.id === action.payload.id ? { ...item,\n            quantity: item.quantity + 1\n          } : item;\n        });\n        return { ...state,\n          cartList: MovedItem //displayCartModal: true,\n          //cartModalContent: \"Moved to cart\"\n\n        };\n      } else {\n        return { ...state,\n          cartList: [...state.cartList, action.payload] //displayCartModal: true,\n          //cartModalContent: \"Moved to cart\"\n\n        };\n      }\n\n    default:\n  }\n};","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/E-Commerce/E-Commerce-App/src/Reducer/CartReducer.js"],"names":["cartReducer","state","action","type","cartList","payload","some","item","id","increasedQuantity","map","quantity","displayCartModal","cartModalContent","decreasedQuantity","filteredCartList","filter","product","MovedItem"],"mappings":"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","sourcesContent":["export const cartReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"Loading\":\r\n        return {\r\n          ...state,\r\n          cartList: action.payload,\r\n          //displayCartModal: true,\r\n          //cartModalContent: \"Loading cart items\"\r\n        };\r\n      \r\n      case \"Added\":\r\n        if (state.cartList.some((item) => item.id === action.payload.id)) {\r\n          const increasedQuantity = state.cartList.map((item) => {\r\n            //console.log(item.id);\r\n            return item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item;\r\n          });\r\n          return {\r\n            ...state,\r\n            cartList: increasedQuantity,\r\n            displayCartModal: true,\r\n            cartModalContent: \"Already exist in cart\"\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            cartList: action.payload,\r\n            displayCartModal: true,\r\n            cartModalContent: \"Added to cart\"\r\n          };\r\n        }\r\n\r\n      case \"AlreadyExist\":\r\n        return {\r\n          ...state,\r\n          displayCartModal: true,\r\n          cartModalContent: \"Item Already exist in cart\"\r\n        }\r\n  \r\n      case \"Increment\":\r\n        const increasedQuantity = state.cartList.map((item) => {\r\n          return item.id === action.payload.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item;\r\n        });\r\n        return {\r\n          ...state,\r\n          //cartList: increasedQuantity,\r\n          cartList:action.payload,\r\n          displayCartModal: true,\r\n          cartModalContent: \"Quantity Increased\"\r\n        };\r\n  \r\n      case \"Decrement\":\r\n        if (action.payload.quantity > 1) {\r\n          const decreasedQuantity = state.cartList.map((item) => {\r\n            //console.log(item.id);\r\n            return item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity - 1 }\r\n              : item;\r\n          });\r\n          return {\r\n            ...state,\r\n            //cartList: decreasedQuantity,\r\n            cartList:action.payload,\r\n            displayCartModal: true,\r\n            cartModalContent: \"Quantity Decreased\"\r\n          };\r\n        } else {\r\n          const filteredCartList = state.cartList.filter(\r\n            (product) => product.id !== action.payload.id\r\n          );\r\n          return {\r\n            ...state,\r\n            cartList: filteredCartList,\r\n            displayCartModal: true,\r\n            cartModalContent: \"Removed from cart\"\r\n          };\r\n        }\r\n  \r\n      case \"Remove\":\r\n        //console.log(\"from remove\", action.payload);\r\n        // const newCartList = state.cartList.filter(\r\n        //   (product) => product.id !== action.payload.id\r\n        // );\r\n        //console.log(\"from remove reducer\",newCartList)\r\n        return {\r\n          ...state,\r\n          cartList: action.payload,//newCartList\r\n          displayCartModal: true,\r\n          cartModalContent: \"Removed from cart\"\r\n        };\r\n\r\n      case \"DISPLAY_MODAL\":\r\n        //console.log(\"display modal from cart reducer\")\r\n        return {\r\n          ...state,\r\n          displayCartModal: false,\r\n        };\r\n\r\n      case \"MoveToCart\":\r\n        if (state.cartList.some((item) => item.id === action.payload.id)) {\r\n          const MovedItem = state.cartList.map((item) => {\r\n            return item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item;\r\n          });\r\n          return {\r\n            ...state,\r\n            cartList: MovedItem,\r\n            //displayCartModal: true,\r\n            //cartModalContent: \"Moved to cart\"\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            cartList: [...state.cartList, action.payload],\r\n            //displayCartModal: true,\r\n            //cartModalContent: \"Moved to cart\"\r\n          };\r\n        }\r\n      default:\r\n    }\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}